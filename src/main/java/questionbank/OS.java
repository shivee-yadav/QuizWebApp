package questionbank;

public class OS {
	public static String os[]={"  Round Robin scheduling is essentially the preemptive version of -",
" Which of the following is not one of the necessary conditions for deadlock?",
" Page fault occurs when-",
" Belady effect occurs in which page replacement algoritm approach?",
" In Unix,Which system call creates the new process?",
" Interprocess communication",
"  A system program that sets up an executable program in main memory ready for execution is",
" Which of the following are(is) Language Processor(s)",
" In which of the following systems,response time is very crucial?",
" A process can be-",
" Which is not valid state of process ?",
"  Number of processes can be completed per unit time?",
" The mechanism that bring a page into memory when needed is called-",
" Access time is the highest in the case of-",
" What is full form of PCB-",
" What will be no of page fault in case of LRU for following sequences of frame no.(Frame size=2)-3,2,1,2,1,3,4,1,4",
" What is condition for critical section?",
" Disk scheduling includes deciding",
" Which among following scheduling algorithms give minimum average waiting time",
"  Semophores are used to solve the problem of",
"In which scheduling policies, context switching never takes place",
"Dispatcher function is to",
"The part of machine level instruction, which tells the central processor what has to be done, is",
"Which of the following refers to the associative memory?",
"To avoid the race condition, the number of processes that may be simultaneously inside their critical section is",
"A system program that combines the separately compiled modules of a program into a form suitable for execution",
"Process is",
"  Addressing structure",
"The Memory Buffer Register (MBR)",
"The strategy of allowing processes that are logically runnable to be temporarily suspended is called",
"The Storage-to-Storage instructions",
"The LRU algorithm",
"Which of the following systems software does the job of merging the records from two files into one?",
"Fork is",
" Thrashing",
"  Supervisor state is",
"Which of the following instruction steps, would be written within the diamond-shaped box, of a flowchart?",
"  Which of the following statements is false?",
"  Interprocess communication",
"  Which of the following functions is(are) performed by the loader"};


	public static String oschoice[][]={

 {" First In First Out",
" Shortest Job First",
" Shortest Remaining Time First",
" Priority"},

{" No preemption",
" Bounded weight",
" Circular weight",
" Hold and wait"},

{" Page is corrupted by application software",
" The page is in main memory",
" Page is not in main memory",
"There is an exception"},

{" FIFO",
"LRU",
"LFU",
" Optimal"},

{"fork",
" create",
" new",
" none of the above"},

{"is required for all processes",
"is usually done via disk drives",
"is never necessary,",
"allows processes to synchronize activity"},

{"assembler",
"linker",
"loader",
"compiler"},

{"assembles",
"compilers",
"interpreters",
"All of the above"},

{"Network OS",
"Real time OS",
" Batch OS",
"Unix OS"},

{"single threaded",
" multithreaded",
" both (a) and (b)",
" none of the mentioned"},

{"parsing",
" new",
" ready",
" waiting"},

{"Output",
" Throughput",
" Efficiency",
" Capacity"},

{"Segmentation",
"Fragmentaion",
"Demand paging",
"Page replacement"},

{"Register",
"Cache",
" RAM",
"Magnetic disk"},

{"Program Control Block",
" Process Control Block",
" Process Communication Block", 
"Program Communication Block"},

{"5",
"3",
"4",
"6"},

{" Mutual exclusion",
"Progess",
" Bounded weighting",
"All"},

{"which should be accessed next",
"order in which disk access requests must be serviced",
"the physical location of the file",
"the logical location of the file"},

{"FCFS",
"SJF",
"Round robin",
"priority"},

{"race condition",
"process synchronization",
"mutual exclusion",
"belady problem"},

{"FCFS",
"round robin",
"Shortest job first",
"Pre-empitive"},

{"put tasks in I/O wait",
"schedule tasks in processor",
"change task priorities",
"All of above"},

{"Operation code",
"Address",
"Locator",
"Flip-Flop"},

{"the address of the data is generated by the CPU",
"the address of the data is supplied by the users",
"there is no need for an address i.e. the data is used as an address",
"the data are accessed sequentially"},

{"8",
"1",
"16",
"0"},

{"assembler",
"linking loader",
"cross compiler",
"load and go"},

{"program in High level language kept on disk",
"contents of main memory",
"a program in execution",
"a job in secondary memory"},

{"defines the fundamental method of determining effective operand addresses",
"are variations in the use of fundamental addressing structures, or some associated", 
"actions which are related to addressing.",
"performs indicated operations on two fast registers of the machine and leave the result in one of the registers.",
"all of the above"},

{"is a hardware memory device which denotes the location of the current instruction being executed.",
"is a group of electrical circuits (hardware), that performs the intent of instructions fetched from memory.",
"contains the address of the memory location that is to be read from or stored into.",
"contains a copy of the designated memory location specified by the MAR after a \"read\" or the new contents of the memory prior to a \"write\"."},

{"preemptive scheduling",
"non preemptive scheduling",
"shortest job first",
"first come first served"},

{"have both their operands in the main store.",
"which perform an operation on a register operand and an operand which is located in the main store, generally leaving the result in the register, expect in the case of store operation when it is also written into the specified storage location.",
"which perform indicated operations on two fast registers of the machine and have the result in one of the registers",
"all of the above"},

{"pages out pages that have been used recently",
"pages out pages that have not been used recently",
"pages out pages that have been least used recently",
"pages out the first page in a given area"},

{"Security software",
"Utility program",
"Networking software",
"Documentation system"},

{
 "the creation of a new job",
"the creation of a new process",
" increasing the priority of a task",
"None of the above"},

{"is a natural consequence of virtual memory systems",
"can always be avoided by swapping",
"always occurs on large computers",
"can be caused by poor paging algorithms"},

{"never used",
"entered by programs when they enter the processor",
"required to perform any I/O",
"only allowed to the operating system"},

{"S = B - C",
"0",
"PRINT A",
"DATA X,4Z"},

{"the technique of storage compaction involves moving all occupied areas of storage to one end or other of main storage",
"compaction does not involve relocation of programs",
"compaction is also know as garbage collection",
" the system must stop everything while it performs the compaction"},

{"is required for all processes",
"is usually done via disk drives",
"is never necessary",
"allows processes to synchronize activity"},

{"allocate space in memory for the programs and resolve symbolic references between object decks",
"adjust all address dependent locations, such as address constants, to correspond to the allocated space.",
"physically place the machine instructions and data into memory.",
"All of the above"}

};

	public static String osanswer[]={"A","B","B","A","A","D","C","D","B","C","A","B","C","D","B",
			"D","D","B","B","C","A","A","A","C","B","B","C",
			"A","D","A","A","C","B","C","D","D","B","B","D","D"};

    
}
